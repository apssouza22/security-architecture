networks:
  security-net: {}
  default:
    ipam:
      config:
        - subnet: 172.16.0.0/23
          ip_range: 172.16.0.0/24

services:

# OPA is a service that can be used to enforce policies on incoming requests.
  opa:
    image: openpolicyagent/opa:0.8.1
    ports:
      - 8181:8181
    volumes:
      - ./opa:/etc/opa
    command:
      - run
      - --server
      - --log-level=debug
      - /etc/opa/service_rbac.json
      - /etc/opa/service_rbac.rego
      - /etc/opa/user_rbac.json
      - /etc/opa/user_rbac.rego

# Keycloak is an open-source identity and access management solution. It can be used to manage user authentication and authorization.
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    hostname: keycloak.local
    environment:
      - KC_HTTP_PORT=9000
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
    ports:
      - "9000:9000"
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command:
      - start-dev
      - --import-realm
      - --health-enabled=true
      - --spi-truststore-file-hostname-verification-policy=ANY

# Authn is a service that can be used to authenticate users and issue tokens.
  authn:
    hostname: authn.local
    image: nginx:1.25.3-alpine
    ports:
      - "8002:80"
    volumes:
      - ./certificates/gen/serviceB:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/nginx-authn.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
    depends_on:
      - keycloak
    networks:
      default:
        ipv4_address: 172.16.1.2

# ServiceA, ServiceB, and ServiceC are services that can be used to host web applications.
  serviceA:
    hostname: serviceA.local
    image: app-example:latest
    ports:
    - "443:443"
    - "80:80"
    volumes:
      - ./certificates/gen/serviceA:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/gen/serviceA/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
      - ./nginx/index.html:/var/www/html/index.html
    depends_on:
      - opa

  serviceB:
    hostname: serviceB.local
    image: app-example:latest
    volumes:
      - ./certificates/gen/serviceB:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/gen/serviceB/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
      - ./nginx/index.html:/var/www/html/index.html

  serviceC:
    hostname: serviceC.local
    image: app-example:latest
    volumes:
      - ./certificates/gen/serviceC:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/gen/serviceC/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
      - ./nginx/index.html:/var/www/html/index.html

# Dnsmasq is a lightweight DNS forwarder and DHCP server. It can be used to resolve DNS queries and provide IP addresses to clients.
  dnsmasq:
    image:  strm/dnsmasq
    container_name: dnsmasq
    restart: on-failure
    cap_add:
      - NET_ADMIN
    volumes:
      - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - "53/udp"
    networks:
      default:
        ipv4_address: 172.16.1.1

# Client is a service that contains iptables rules to redirect outbound traffic on port 80 to authn service on port 81.
  client:
    hostname: client.local
    image: nginx:1.25.3-alpine
    volumes:
      - ./certificates/gen/serviceB:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
      - ./nginx/index.html:/var/www/html/index.html
    privileged: true
    cap_add:
      - NET_ADMIN
    entrypoint: >
      /bin/sh -c "
      apk add --no-cache iptables &&
      iptables -t nat -A OUTPUT -p tcp --dport 80 -j DNAT --to-destination 127.0.0.1:81 &&
      iptables -t nat -A POSTROUTING -j MASQUERADE && nginx -g 'daemon off;'"

