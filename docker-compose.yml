networks:
  security-net: {}
  default:
    ipam:
      config:
        - subnet: 172.16.0.0/23
          ip_range: 172.16.0.0/24

services:
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    hostname: keycloak.local
    environment:
      - KC_HTTP_PORT=9000
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
    ports:
      - "9000:9000"
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command:
      - start-dev
      - --import-realm
      - --health-enabled=true
      - --spi-truststore-file-hostname-verification-policy=ANY # This parameter specifies the policy for verifying the hostname when establishing SSL/TLS connections using the truststore file

  authn:
    hostname: authn.local
    image: nginx:1.25.3-alpine
    ports:
      - "8002:80"
      - "8443:443"
    volumes:
      - ./certificates/gen/authn:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/nginx-authn.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
    depends_on:
      - keycloak

  serviceA:
    hostname: serviceA.local
    image: app-example:latest
    environment:
      SERVICE_NAME: serviceA.local
    ports:
      - "8003:443"
    volumes:
      - ./certificates/gen/serviceA:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/gen/serviceA/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
      - ./nginx/proxy-inbound.conf.template:/etc/nginx/templates/proxy-inbound.conf.template
      - ./nginx/proxy-outbound.conf.template:/etc/nginx/templates/proxy-outbound.conf.template
    privileged: true
    cap_add:
      - NET_ADMIN

  serviceB:
    hostname: serviceB.local
    image: app-example:latest
    environment:
      SERVICE_NAME: serviceB.local
    ports:
      - "8444:443"
      - "8004:80"
    volumes:
      - ./certificates/gen/serviceB:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/gen/serviceB/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
      - ./nginx/proxy-inbound.conf.template:/etc/nginx/templates/proxy-inbound.conf.template
      - ./nginx/proxy-outbound.conf.template:/etc/nginx/templates/proxy-outbound.conf.template
    privileged: true
    cap_add:
      - NET_ADMIN

  serviceC:
    hostname: serviceC.local
    image: app-example:latest
    environment:
      SERVICE_NAME: serviceC.local
    ports:
      - "8445:443"
      - "8005:80"
    volumes:
      - ./certificates/gen/serviceC:/etc/nginx/certs
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro
      - ./nginx/gen/serviceC/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/njs:/etc/nginx/njs:ro
      - ./nginx/proxy-inbound.conf.template:/etc/nginx/templates/proxy-inbound.conf.template
      - ./nginx/proxy-outbound.conf.template:/etc/nginx/templates/proxy-outbound.conf.template
    privileged: true
    cap_add:
      - NET_ADMIN

  # OPA is a service that can be used to enforce policies on incoming requests.
  opa:
    image: openpolicyagent/opa:0.8.1
    ports:
      - 8181:8181
    volumes:
      - ./opa:/etc/opa
    command:
      - run
      - --server
      - --log-level=debug
      - /etc/opa/service_rbac.json
      - /etc/opa/service_rbac.rego
      - /etc/opa/user_rbac.json
      - /etc/opa/user_rbac.rego

# https://github.com/coreruleset/modsecurity-crs-docker/tree/main/nginx
  firewall:
    image: owasp/modsecurity-crs:nginx
    ports:
      - "8001:8080"
      - "443:8443"
    environment:
#      See all the available variables at https://github.com/coreruleset/modsecurity-crs-docker/blob/main/README.md#common-env-variables
      SERVERNAME: waf.local
      BLOCKING_PARANOIA: 1
      REPORTING_LEVEL: 2
      BACKEND: "https://authn.local"
      MODSEC_RULE_ENGINE: on
    volumes:
      - ./waf/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf:/etc/modsecurity.d/owasp-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
      - ./waf/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf:/etc/modsecurity.d/owasp-crs/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf
      - ./certificates/gen/authn/service.crt:/usr/local/apache2/conf/server.crt
      - ./certificates/gen/authn/service.key:/usr/local/apache2/conf/server.key
      - ./certificates/gen/ca.crt:/etc/nginx/certs/ca.crt:ro

