#---------------------------------------------------------------------- #
# Template for the proxy inbound configuration
# This file is included in the main configuration file
# This is required to dynamically set the SERVICE_PORT
#---------------------------------------------------------------------- #

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ${SERVICE_NAME};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;
    http2 on;


    ssl_certificate data:$dynamic_ssl_cert;
    ssl_certificate_key data:$dynamic_ssl_key;

    # ssl certificate used for the server estabilish secure connections(HTTPS)
    # Uncomment the following lines to use static SSL Certs
    # ssl_certificate /etc/nginx/certs/service.crt;
    # ssl_certificate_key /etc/nginx/certs/service.key;

    # the server will request a certificate from the client and verifies it against a trusted CA.
    ssl_client_certificate /etc/nginx/certs/ca.crt;
    ssl_verify_depth 2;

    ssl_verify_client optional; # Disable default client verification. The check is done with auth_request /_authz;

    location / {
        auth_request /_authz;

        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        proxy_pass http://127.0.0.1:7000;
        proxy_read_timeout  60;
        client_max_body_size 512m;
    }

    # Serve the endpoint to update the certs
    location /certs {
        js_content certs.handleRequest;
    }

    # Perform authorization check on the client certificate CN and Opa
    location = /_authz {
        internal;
        js_content authz.validate;
    }

    location = /_opa {
        internal;
        proxy_pass http://opa:8181/v1/data/httpapi/service_rbac;
    }

    # A proxy to Keycloak to get the public key to validate the JWT token
    location = /_keycloak_certs {
        internal;
        proxy_pass http://keycloak.local:9000/realms/tenantA/protocol/openid-connect/certs;
    }
}
